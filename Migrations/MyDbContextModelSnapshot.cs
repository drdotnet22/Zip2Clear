// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zip2Clear.Data;

#nullable disable

namespace Zip2Clear.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Zip2Clear.Data.Declaration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BOLnumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryOfDestination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Exporter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Importer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ManifestNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModeOfTransport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortOfEntry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortOfExit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Regime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Submitted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalGrossMassMeasureQnty")
                        .HasColumnType("REAL");

                    b.Property<string>("TotalGrossMassMeasureUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalPackageQnty")
                        .HasColumnType("REAL");

                    b.Property<string>("TotalPackageQntyUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Declaration");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1f04f61-2e77-4af5-8e93-58648bbdf948"),
                            BOLnumber = "PEVMOB005095",
                            CountryOfDestination = "BS",
                            CountryOfOrigin = "US",
                            CreatedDate = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7329),
                            DeclarationNumber = "2022DEC0000845484",
                            DeclarationOffice = "SAQPDK",
                            Exporter = "Mennonite Messianic Mission",
                            Importer = "Mennonite Messianic Mission",
                            ManifestNumber = "MSTRNO30613",
                            ModeOfTransport = "1",
                            PortOfEntry = "SAQ",
                            PortOfExit = "USPVS",
                            Regime = "4",
                            Status = "Compliance",
                            Submitted = true,
                            SubmittedDate = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7331),
                            TotalGrossMassMeasureQnty = 390.0,
                            TotalGrossMassMeasureUOM = "LB",
                            TotalPackageQnty = 1.0,
                            TotalPackageQntyUOM = "EA",
                            Type = "400"
                        },
                        new
                        {
                            Id = new Guid("ea0b2207-1f04-471f-8820-f85c8fb84f21"),
                            BOLnumber = "PEVMOB005096",
                            CountryOfDestination = "BS",
                            CountryOfOrigin = "US",
                            CreatedDate = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7339),
                            DeclarationNumber = "2022DEC0000845474",
                            DeclarationOffice = "SAQPDK",
                            Exporter = "Mennonite Messianic Mission",
                            Importer = "Mennonite Messianic Mission",
                            ManifestNumber = "MSTRNO30613",
                            ModeOfTransport = "1",
                            PortOfEntry = "SAQ",
                            PortOfExit = "USPVS",
                            Regime = "4",
                            Status = "Compliance",
                            Submitted = true,
                            SubmittedDate = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7341),
                            TotalGrossMassMeasureQnty = 40.0,
                            TotalGrossMassMeasureUOM = "LB",
                            TotalPackageQnty = 1.0,
                            TotalPackageQntyUOM = "EA",
                            Type = "400"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeclarationId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FreightValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InsuranceValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("VendorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationId");

                    b.HasIndex("VendorId");

                    b.ToTable("Invoice");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d49d206d-0ea7-458f-a4c8-9e7d16150631"),
                            Date = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7253),
                            FreightValue = 0m,
                            InsuranceValue = 150m,
                            InvoiceNumber = "814184793"
                        },
                        new
                        {
                            Id = new Guid("885230a2-c169-441c-befa-60b745b60a98"),
                            Date = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7295),
                            FreightValue = 0m,
                            InsuranceValue = 0m,
                            InvoiceNumber = "2022ES7023"
                        },
                        new
                        {
                            Id = new Guid("7dd22063-0369-4d1d-8a2b-dbf4f3caebf9"),
                            Date = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7298),
                            FreightValue = 0m,
                            InsuranceValue = 0m,
                            InvoiceNumber = "2022ES8200"
                        },
                        new
                        {
                            Id = new Guid("4cd50d48-c4cc-4186-9953-635cba807ce1"),
                            Date = new DateTime(2022, 6, 23, 21, 26, 53, 801, DateTimeKind.Local).AddTicks(7301),
                            FreightValue = 75m,
                            InsuranceValue = 150.23m,
                            InvoiceNumber = "11312272"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DutyExciseRate")
                        .HasColumnType("REAL");

                    b.Property<double>("DutyGeneralRate")
                        .HasColumnType("REAL");

                    b.Property<double>("HsCode")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<string>("UomId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("UomValue")
                        .HasColumnType("REAL");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bbad374-0c6e-4799-a67d-c86d1ad38c2e"),
                            Department = "MS",
                            Description = "INNER TUBES",
                            DutyExciseRate = 45.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 40131000.0,
                            Quantity = 1.0,
                            UomId = "EA",
                            UomValue = 1.0,
                            Value = 54.85m,
                            Weight = 50.0
                        },
                        new
                        {
                            Id = new Guid("b2e3427a-1408-4614-accf-4fc2ff318ce2"),
                            Department = "MS",
                            Description = "TIRES, CAR",
                            DutyExciseRate = 25.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 40111000.0,
                            Quantity = 1.0,
                            UomId = "EA",
                            UomValue = 1.0,
                            Value = 168.25m,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = new Guid("d8fab7dd-1ea9-4614-8928-65e317d55ef3"),
                            Department = "MS",
                            Description = "AUTO PARTS",
                            DutyExciseRate = 60.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 87071010.0,
                            Quantity = 49.0,
                            UomId = "EA",
                            UomValue = 49.0,
                            Value = 691.78m,
                            Weight = 100.0
                        },
                        new
                        {
                            Id = new Guid("df5ed718-6357-4397-bc98-bd4c6e800c52"),
                            Department = "MS",
                            Description = "AUTO PARTS",
                            DutyExciseRate = 60.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 87071010.0,
                            Quantity = 5.0,
                            UomId = "EA",
                            UomValue = 5.0,
                            Value = 55.89m,
                            Weight = 90.0
                        },
                        new
                        {
                            Id = new Guid("f85203d5-f3b4-49cf-b40f-ba23147c524f"),
                            Department = "MF",
                            Description = "ONION BAGS",
                            DutyExciseRate = 0.0,
                            DutyGeneralRate = 45.0,
                            HsCode = 39232990.0,
                            Quantity = 4.0,
                            UomId = "LB",
                            UomValue = 40.0,
                            Value = 528m,
                            Weight = 40.0
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d6684d1-ce66-4420-9407-7788037836b9"),
                            AddressLine = "PO BOX 1723",
                            CityName = "OKEECHOBEE",
                            CountryCode = "US",
                            Name = "WALPOLE FEED",
                            PostalCode = "34973",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("b0fdc745-b051-4131-b4d3-7fcd0abc6721"),
                            AddressLine = "12029 W DOPHIN CT",
                            CityName = "HOMOSASSA",
                            CountryCode = "US",
                            Name = "AGRIVET",
                            PostalCode = "34448",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("6f526cd3-7059-422d-b742-0acb482f29b2"),
                            AddressLine = "1301 SW 2ND ST",
                            CityName = "POMPANO BEACH",
                            CountryCode = "US",
                            Name = "ROADWAY TIRES",
                            PostalCode = "33069",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("ed8e436c-19f0-4dc6-9413-a4149b876ba4"),
                            AddressLine = "2968 RAVENSWOOD ROAD",
                            CityName = "FORT LAUDERDALE",
                            CountryCode = "US",
                            Name = "TPH",
                            PostalCode = "33312",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("7e85c15f-fc51-44e3-ab40-6b2572fa1774"),
                            AddressLine = "4300 STEWART ROAD",
                            CityName = "LAKELAND",
                            CountryCode = "US",
                            Name = "MONTE PACKAGE",
                            PostalCode = "33815",
                            State = "FL"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Invoice", b =>
                {
                    b.HasOne("Zip2Clear.Data.Declaration", "Declaration")
                        .WithMany()
                        .HasForeignKey("DeclarationId");

                    b.HasOne("Zip2Clear.Data.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.Navigation("Declaration");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Zip2Clear.Data.Item", b =>
                {
                    b.HasOne("Zip2Clear.Data.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.Navigation("Invoice");
                });
#pragma warning restore 612, 618
        }
    }
}
