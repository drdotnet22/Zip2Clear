// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zip2Clear.Data;

#nullable disable

namespace Zip2Clear.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220625221729_ChangedInvoiceclass")]
    partial class ChangedInvoiceclass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Zip2Clear.Data.Declaration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BOLnumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryOfDestination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Exporter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Importer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ManifestNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModeOfTransport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortOfEntry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortOfExit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Regime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Submitted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalGrossMassMeasureQnty")
                        .HasColumnType("REAL");

                    b.Property<string>("TotalGrossMassMeasureUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalPackageQnty")
                        .HasColumnType("REAL");

                    b.Property<string>("TotalPackageQntyUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Declaration");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5bf0fe48-b859-4316-b58d-d0ccf2737ecb"),
                            BOLnumber = "PEVMOB005095",
                            CountryOfDestination = "BS",
                            CountryOfOrigin = "US",
                            CreatedDate = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(368),
                            DeclarationNumber = "2022DEC0000845484",
                            DeclarationOffice = "SAQPDK",
                            Exporter = "Mennonite Messianic Mission",
                            Importer = "Mennonite Messianic Mission",
                            ManifestNumber = "MSTRNO30613",
                            ModeOfTransport = "1",
                            PortOfEntry = "SAQ",
                            PortOfExit = "USPVS",
                            Regime = "4",
                            Status = "Compliance",
                            Submitted = true,
                            SubmittedDate = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(370),
                            TotalGrossMassMeasureQnty = 390.0,
                            TotalGrossMassMeasureUOM = "LB",
                            TotalPackageQnty = 1.0,
                            TotalPackageQntyUOM = "EA",
                            Type = "400"
                        },
                        new
                        {
                            Id = new Guid("1ed9e6fe-d401-43d2-8667-a88088a6fa17"),
                            BOLnumber = "PEVMOB005096",
                            CountryOfDestination = "BS",
                            CountryOfOrigin = "US",
                            CreatedDate = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(407),
                            DeclarationNumber = "2022DEC0000845474",
                            DeclarationOffice = "SAQPDK",
                            Exporter = "Mennonite Messianic Mission",
                            Importer = "Mennonite Messianic Mission",
                            ManifestNumber = "MSTRNO30613",
                            ModeOfTransport = "1",
                            PortOfEntry = "SAQ",
                            PortOfExit = "USPVS",
                            Regime = "4",
                            Status = "Compliance",
                            Submitted = true,
                            SubmittedDate = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(409),
                            TotalGrossMassMeasureQnty = 40.0,
                            TotalGrossMassMeasureUOM = "LB",
                            TotalPackageQnty = 1.0,
                            TotalPackageQntyUOM = "EA",
                            Type = "400"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeclarationId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Insurance")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("VendorId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationId");

                    b.HasIndex("VendorId");

                    b.ToTable("Invoice");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bceaebaa-21f8-4770-b695-143946c6ebd6"),
                            Date = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(292),
                            Insurance = 150m,
                            InvoiceNumber = "814184793",
                            Shipping = 0m
                        },
                        new
                        {
                            Id = new Guid("a2f7691c-4af5-4067-9f65-c4b0bbc6a046"),
                            Date = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(331),
                            Insurance = 0m,
                            InvoiceNumber = "2022ES7023",
                            Shipping = 0m
                        },
                        new
                        {
                            Id = new Guid("c9563ad0-becf-4119-9f5e-7e2651094fce"),
                            Date = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(334),
                            Insurance = 0m,
                            InvoiceNumber = "2022ES8200",
                            Shipping = 0m
                        },
                        new
                        {
                            Id = new Guid("dfb7b0a7-f79c-44bc-b282-9cdb05e0797f"),
                            Date = new DateTime(2022, 6, 25, 18, 17, 29, 337, DateTimeKind.Local).AddTicks(341),
                            Insurance = 150.23m,
                            InvoiceNumber = "11312272",
                            Shipping = 75m
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("TarriffId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("UomValue")
                        .HasColumnType("REAL");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TarriffId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Zip2Clear.Data.Tarriff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("ExciseRate")
                        .HasColumnType("REAL");

                    b.Property<double>("GeneralRate")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Number")
                        .HasColumnType("REAL");

                    b.Property<string>("UomId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tarriff");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7eaf8d29-1fc7-45c0-bedf-06a186f6a785"),
                            ExciseRate = 0.0,
                            GeneralRate = 0.0,
                            Name = "APPLES",
                            Number = 8081000.0,
                            UomId = "LB"
                        },
                        new
                        {
                            Id = new Guid("75f37593-ef69-4bea-be0f-bb5bede0c20f"),
                            ExciseRate = 0.0,
                            GeneralRate = 45.0,
                            Name = "BATTERIES",
                            Number = 85073000.0,
                            UomId = "EA"
                        },
                        new
                        {
                            Id = new Guid("6cba619c-f555-421a-bbb2-5794844abdb2"),
                            ExciseRate = 0.0,
                            GeneralRate = 60.0,
                            Name = "CANDY",
                            Number = 17049010.0,
                            UomId = "LB"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46637b43-42a7-4897-af32-89b916c10418"),
                            AddressLine = "PO BOX 1723",
                            CityName = "OKEECHOBEE",
                            CountryCode = "US",
                            Name = "WALPOLE FEED",
                            PostalCode = "34973",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("77654d09-c6c1-4ed7-8790-4aff0383e7ab"),
                            AddressLine = "12029 W DOPHIN CT",
                            CityName = "HOMOSASSA",
                            CountryCode = "US",
                            Name = "AGRIVET",
                            PostalCode = "34448",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("621929c9-cafd-4612-8f16-8f25cbcf0f74"),
                            AddressLine = "1301 SW 2ND ST",
                            CityName = "POMPANO BEACH",
                            CountryCode = "US",
                            Name = "ROADWAY TIRES",
                            PostalCode = "33069",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("452d9c1a-c07c-4ed3-9bcd-1e68e225ee4d"),
                            AddressLine = "2968 RAVENSWOOD ROAD",
                            CityName = "FORT LAUDERDALE",
                            CountryCode = "US",
                            Name = "TPH",
                            PostalCode = "33312",
                            State = "FL"
                        },
                        new
                        {
                            Id = new Guid("9124659f-ac6a-497f-a4f2-e637eec498dc"),
                            AddressLine = "4300 STEWART ROAD",
                            CityName = "LAKELAND",
                            CountryCode = "US",
                            Name = "MONTE PACKAGE",
                            PostalCode = "33815",
                            State = "FL"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Invoice", b =>
                {
                    b.HasOne("Zip2Clear.Data.Declaration", "Declaration")
                        .WithMany()
                        .HasForeignKey("DeclarationId");

                    b.HasOne("Zip2Clear.Data.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.Navigation("Declaration");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Zip2Clear.Data.Item", b =>
                {
                    b.HasOne("Zip2Clear.Data.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("Zip2Clear.Data.Tarriff", "Tarriff")
                        .WithMany()
                        .HasForeignKey("TarriffId");

                    b.Navigation("Invoice");

                    b.Navigation("Tarriff");
                });
#pragma warning restore 612, 618
        }
    }
}
