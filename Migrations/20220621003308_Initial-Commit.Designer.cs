// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zip2Clear.Data;

#nullable disable

namespace Zip2Clear.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220621003308_Initial-Commit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Zip2Clear.Data.Declaration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BOLnumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryOfDestination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Exporter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Importer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ManifestNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModeOfTransport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortOfEntry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PortOfExit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Regime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Submitted")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalGrossMassMeasureQnty")
                        .HasColumnType("REAL");

                    b.Property<string>("TotalGrossMassMeasureUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalPackageQnty")
                        .HasColumnType("REAL");

                    b.Property<string>("TotalPackageQntyUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("declarationCreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("declarationSubmittedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Declaration");

                    b.HasData(
                        new
                        {
                            Id = new Guid("acf54c51-301a-4c5e-844d-0e95d64f621b"),
                            BOLnumber = "PEVMOB005095",
                            CountryOfDestination = "BS",
                            CountryOfOrigin = "US",
                            DeclarationNumber = "2022DEC0000845484",
                            DeclarationOffice = "SAQPDK",
                            DeclarationType = "400",
                            Exporter = "Mennonite Messianic Mission",
                            Importer = "Mennonite Messianic Mission",
                            ManifestNumber = "MSTRNO30613",
                            ModeOfTransport = "1",
                            PortOfEntry = "SAQ",
                            PortOfExit = "USPVS",
                            Regime = "4",
                            Status = "Compliance",
                            Submitted = true,
                            TotalGrossMassMeasureQnty = 390.0,
                            TotalGrossMassMeasureUOM = "LB",
                            TotalPackageQnty = 1.0,
                            TotalPackageQntyUOM = "EA",
                            declarationCreatedDate = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4634),
                            declarationSubmittedDate = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4636)
                        },
                        new
                        {
                            Id = new Guid("6f22cfa1-bf4d-48f9-bda8-42710d89adbc"),
                            BOLnumber = "PEVMOB005096",
                            CountryOfDestination = "BS",
                            CountryOfOrigin = "US",
                            DeclarationNumber = "2022DEC0000845474",
                            DeclarationOffice = "SAQPDK",
                            DeclarationType = "400",
                            Exporter = "Mennonite Messianic Mission",
                            Importer = "Mennonite Messianic Mission",
                            ManifestNumber = "MSTRNO30613",
                            ModeOfTransport = "1",
                            PortOfEntry = "SAQ",
                            PortOfExit = "USPVS",
                            Regime = "4",
                            Status = "Compliance",
                            Submitted = true,
                            TotalGrossMassMeasureQnty = 40.0,
                            TotalGrossMassMeasureUOM = "LB",
                            TotalPackageQnty = 1.0,
                            TotalPackageQntyUOM = "EA",
                            declarationCreatedDate = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4644),
                            declarationSubmittedDate = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4645)
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeclarationId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FreightValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InsuranceValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeclarationId");

                    b.ToTable("Invoice");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04a28fd9-24a5-4d44-8ac3-7e905ca43a3b"),
                            Date = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4565),
                            FreightValue = 0m,
                            InsuranceValue = 150m,
                            InvoiceNumber = "814184793",
                            VendorName = "ROADWAY TIRES"
                        },
                        new
                        {
                            Id = new Guid("4e720259-6fa1-4f9b-8185-f2c2d45cb07e"),
                            Date = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4602),
                            FreightValue = 0m,
                            InsuranceValue = 0m,
                            InvoiceNumber = "2022ES7023",
                            VendorName = "TPH"
                        },
                        new
                        {
                            Id = new Guid("ee5b6589-5bd6-4c70-89ee-3e2fa6250247"),
                            Date = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4605),
                            FreightValue = 0m,
                            InsuranceValue = 0m,
                            InvoiceNumber = "2022ES8200",
                            VendorName = "TPH"
                        },
                        new
                        {
                            Id = new Guid("52fc13eb-dbd0-4527-94f6-323312a6a6b9"),
                            Date = new DateTime(2022, 6, 20, 20, 33, 8, 535, DateTimeKind.Local).AddTicks(4608),
                            FreightValue = 75m,
                            InsuranceValue = 150.23m,
                            InvoiceNumber = "11312272",
                            VendorName = "MONTE PACKAGE"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeclarationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DutyExciseRate")
                        .HasColumnType("REAL");

                    b.Property<double>("DutyGeneralRate")
                        .HasColumnType("REAL");

                    b.Property<double>("HsCode")
                        .HasColumnType("REAL");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<string>("UomId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("UomValue")
                        .HasColumnType("REAL");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76c63bd2-d1d7-42dd-ad79-d5c84b59ddf9"),
                            DeclarationNumber = "2022DEC0000845484",
                            Department = "MS",
                            Description = "INNER TUBES",
                            DutyExciseRate = 45.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 40131000.0,
                            InvoiceNumber = "814184793",
                            Quantity = 1.0,
                            UomId = "EA",
                            UomValue = 1.0,
                            Value = 54.85m,
                            Weight = 50.0
                        },
                        new
                        {
                            Id = new Guid("8d152256-3c92-4729-ae4b-3b0924ab9b4e"),
                            DeclarationNumber = "2022DEC0000845484",
                            Department = "MS",
                            Description = "TIRES, CAR",
                            DutyExciseRate = 25.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 40111000.0,
                            InvoiceNumber = "814184793",
                            Quantity = 1.0,
                            UomId = "EA",
                            UomValue = 1.0,
                            Value = 168.25m,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = new Guid("cd5c8038-4190-4d58-9528-10c83491ac65"),
                            DeclarationNumber = "2022DEC0000845484",
                            Department = "MS",
                            Description = "AUTO PARTS",
                            DutyExciseRate = 60.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 87071010.0,
                            InvoiceNumber = "2022ES7023",
                            Quantity = 49.0,
                            UomId = "EA",
                            UomValue = 49.0,
                            Value = 691.78m,
                            Weight = 100.0
                        },
                        new
                        {
                            Id = new Guid("b3422b77-2153-4c6b-a674-2adcd5127e91"),
                            DeclarationNumber = "2022DEC0000845484",
                            Department = "MS",
                            Description = "AUTO PARTS",
                            DutyExciseRate = 60.0,
                            DutyGeneralRate = 0.0,
                            HsCode = 87071010.0,
                            InvoiceNumber = "2022ES7023",
                            Quantity = 5.0,
                            UomId = "EA",
                            UomValue = 5.0,
                            Value = 55.89m,
                            Weight = 90.0
                        },
                        new
                        {
                            Id = new Guid("740c615e-3b9f-4ac1-b64f-cf24b718614a"),
                            DeclarationNumber = "2022DEC0000845474",
                            Department = "MF",
                            Description = "ONION BAGS",
                            DutyExciseRate = 0.0,
                            DutyGeneralRate = 45.0,
                            HsCode = 39232990.0,
                            InvoiceNumber = "11312272",
                            Quantity = 4.0,
                            UomId = "LB",
                            UomValue = 40.0,
                            Value = 528m,
                            Weight = 40.0
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorAddressLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorCityName")
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorCountryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorPostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorState")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("806a84bd-80ab-40f2-8166-a8e760e3bf33"),
                            VendorAddressLine = "PO BOX 1723",
                            VendorCityName = "OKEECHOBEE",
                            VendorCountryCode = "US",
                            VendorName = "WALPOLE FEED",
                            VendorPostalCode = "34973",
                            VendorState = "FL"
                        },
                        new
                        {
                            Id = new Guid("1c17049c-923a-46da-bdbb-cdefe7ff5d94"),
                            VendorAddressLine = "12029 W DOPHIN CT",
                            VendorCityName = "HOMOSASSA",
                            VendorCountryCode = "US",
                            VendorName = "AGRIVET",
                            VendorPostalCode = "34448",
                            VendorState = "FL"
                        },
                        new
                        {
                            Id = new Guid("ab4020ed-e260-46c0-9837-b43bf1a367eb"),
                            VendorAddressLine = "1301 SW 2ND ST",
                            VendorCityName = "POMPANO BEACH",
                            VendorCountryCode = "US",
                            VendorName = "ROADWAY TIRES",
                            VendorPostalCode = "33069",
                            VendorState = "FL"
                        },
                        new
                        {
                            Id = new Guid("20cafe55-7730-4844-b66c-d24259565c22"),
                            VendorAddressLine = "2968 RAVENSWOOD ROAD",
                            VendorCityName = "FORT LAUDERDALE",
                            VendorCountryCode = "US",
                            VendorName = "TPH",
                            VendorPostalCode = "33312",
                            VendorState = "FL"
                        },
                        new
                        {
                            Id = new Guid("40072443-0a76-4dde-95a5-56401a200f67"),
                            VendorAddressLine = "4300 STEWART ROAD",
                            VendorCityName = "LAKELAND",
                            VendorCountryCode = "US",
                            VendorName = "MONTE PACKAGE",
                            VendorPostalCode = "33815",
                            VendorState = "FL"
                        });
                });

            modelBuilder.Entity("Zip2Clear.Data.Invoice", b =>
                {
                    b.HasOne("Zip2Clear.Data.Declaration", "Declaration")
                        .WithMany()
                        .HasForeignKey("DeclarationId");

                    b.Navigation("Declaration");
                });
#pragma warning restore 612, 618
        }
    }
}
