@inject VendorServices vendorService

<h3>New Vendor</h3>
<br/>
<div class="input-group">
    <div class="input-group-prepend">
        <span class="input-group-text">Vendor Name:</span>
    </div>
    <input class="form-control" @bind="newVendor.Name" />  
</div>
<br />
<div class="input-group">
    <div class="input-group-prepend">
        <span class="input-group-text">Address line:</span>
    </div>
    <input class="form-control" @bind="newVendor.AddressLine" />
</div>
<br />
<div class="input-group">
    <div class="input-group-prepend">
        <span class="input-group-text">City:</span>
    </div>
    <input class="form-control" @bind="newVendor.CityName" />
</div>
<br />
<div class="input-group">
    <div class="input-group-prepend">
        <span class="input-group-text">State:</span>
    </div>
    <input class="form-control" @bind="newVendor.State" />  
</div>
<br/>
<div class="input-group">
    <div class="input-group-prepend">
        <span class="input-group-text">Postal code:</span>
    </div>
    <input class="form-control" @bind="newVendor.PostalCode" />  
</div>
<br/>
<div class="input-group">
    <div class="input-group-prepend">
        <span class="input-group-text">Country:</span>
    </div>
    <input tabindex="1" class="form-control" @bind="newVendor.CountryCode" />  
</div>
<br />
<a tabindex="0" class="btn btn-info" @onclick="AddNewVendor" > Save Vendor</a>
<a tabindex="0" class="btn btn-secondary">Cancel</a>
        
@code {
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    public Vendor newVendor { get; set; } = new Vendor() { CountryCode = "US" };

    private async Task AddNewVendor()
    {
        newVendor.VendorId = Guid.NewGuid();
        await vendorService.AddVendorAsync(newVendor);
        await OnClick.InvokeAsync("CloseDialog");
    }

    private async Task Cancel()
    {
        await OnClick.InvokeAsync("CloseDialog");
    }
}