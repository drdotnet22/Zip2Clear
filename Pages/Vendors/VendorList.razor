@page "/vendors"

@using Zip2Clear.Data
@using Syncfusion.Blazor.Grids
@using Microsoft.EntityFrameworkCore

@inject MyDbContext dbContext

@*<h3>VendorList</h3>
<br/>
<a href="/vendors/new">New</a>
<br />
<table class="table table-sm">
		<thead>
			<tr>
				<th>Vendor</th>
				<th>Address</th>
                <th>City</th>
                <th>Postal Code</th>
                <th>Country</th>
			</tr>
		</thead>
		<tbody>
                @if (Vendors.Any())
                {
                    @foreach (var vendor in Vendors)
                    {
                        <tr>
                            <td >@vendor.Name</td>
                            <td>@vendor.AddressLine</td>
                            <td>@vendor.CityName</td>
                            <td>@vendor.PostalCode</td>
                            <td>@vendor.CountryCode</td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No vendors available</strong></td></tr>
                }
        </tbody>
</table>*@

<SfGrid DataSource="@vendors" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" AllowPaging="true" >
    <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true"></GridEditSettings>
    <GridEvents OnActionBegin="ActionBeginHandler" OnActionComplete="ActionCompleteHandler" TValue="Vendor"></GridEvents>
    <GridColumns>
        <GridColumn Field="@nameof(Vendor.Name)" HeaderText="Name" ></GridColumn>
    </GridColumns>
</SfGrid>

@code {
    public IEnumerable<Vendor> vendors { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetVendors();
        await base.OnInitializedAsync();
    }

    private async Task GetVendors()
    {
        vendors = dbContext.Vendor.ToList();
    }

    private void ActionBeginHandler(ActionEventArgs<Vendor> Args)
    {
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (Args.Action == "Add")
            {
                Args.Data.Id = Guid.NewGuid();
                dbContext.Vendor.Add(Args.Data);
                dbContext.SaveChanges();
                GetVendors();
            }
            else
            {
                var tariffExists = dbContext.Vendor.FirstOrDefault(t => t.Id == Args.Data.Id);
                if (tariffExists != null)
                {
                    dbContext.Vendor.Update(Args.Data);
                    dbContext.SaveChanges();
                    GetVendors();
                }
            }
        }
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            dbContext.Vendor.Remove(Args.Data);
            dbContext.SaveChanges();
            GetVendors();
        }
    }
    private void ActionCompleteHandler(ActionEventArgs<Vendor> Args)
    {
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            GetVendors(); //to fetch the updated data from db to Grid
        }
    }

}
